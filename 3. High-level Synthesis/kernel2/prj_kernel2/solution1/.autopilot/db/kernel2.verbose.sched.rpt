

================================================================
== Vivado HLS Report for 'kernel2'
================================================================
* Date:           Sun May 22 22:32:21 2022

* Version:        2016.4 (Build 1756540 on Mon Jan 23 19:31:01 MST 2017)
* Project:        prj_kernel2
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.14|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  5110|  5110|  5111|  5111|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1  |  5106|  5106|         7|          5|          1|  1021|    yes   |
        +----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 5, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 11
* Pipeline: 1
  Pipeline-0: II = 5, D = 7, States = { 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	11  / (exitcond)
	5  / (!exitcond)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	4  / true
11 --> 
* FSM state operations: 

 <State 1>: 2.33ns
ST_1: array_addr_1 (5)  [1/1] 0.00ns  loc: kernel2.cpp:7
:3  %array_addr_1 = getelementptr [1024 x i32]* %array_r, i64 0, i64 2

ST_1: reg2 (6)  [2/2] 2.33ns  loc: kernel2.cpp:7
:4  %reg2 = load i32* %array_addr_1, align 4


 <State 2>: 2.33ns
ST_2: array_addr (3)  [1/1] 0.00ns
:1  %array_addr = getelementptr [1024 x i32]* %array_r, i64 0, i64 0

ST_2: reg2 (6)  [1/2] 2.33ns  loc: kernel2.cpp:7
:4  %reg2 = load i32* %array_addr_1, align 4

ST_2: array_addr_2 (7)  [1/1] 0.00ns  loc: kernel2.cpp:8
:5  %array_addr_2 = getelementptr [1024 x i32]* %array_r, i64 0, i64 1

ST_2: reg1 (8)  [2/2] 2.33ns  loc: kernel2.cpp:8
:6  %reg1 = load i32* %array_addr_2, align 4

ST_2: reg0 (9)  [2/2] 2.33ns  loc: kernel2.cpp:9
:7  %reg0 = load i32* %array_addr, align 4


 <State 3>: 3.42ns
ST_3: StgValue_19 (2)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([1024 x i32]* %array_r) nounwind, !map !7

ST_3: StgValue_20 (4)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @kernel2_str) nounwind

ST_3: reg1 (8)  [1/2] 2.33ns  loc: kernel2.cpp:8
:6  %reg1 = load i32* %array_addr_2, align 4

ST_3: reg0 (9)  [1/2] 2.33ns  loc: kernel2.cpp:9
:7  %reg0 = load i32* %array_addr, align 4

ST_3: StgValue_23 (10)  [1/1] 1.08ns  loc: kernel2.cpp:11
:8  br label %1


 <State 4>: 5.44ns
ST_4: reg0_1 (12)  [1/1] 0.00ns
:0  %reg0_1 = phi i32 [ %reg1, %0 ], [ %reg1_1, %2 ]

ST_4: reg1_1 (13)  [1/1] 0.00ns
:1  %reg1_1 = phi i32 [ %reg2, %0 ], [ %result, %2 ]

ST_4: i (14)  [1/1] 0.00ns
:2  %i = phi i11 [ 3, %0 ], [ %i_1, %2 ]

ST_4: reg (15)  [1/1] 0.00ns
:3  %reg = phi i32 [ %reg0, %0 ], [ %reg0_1, %2 ]

ST_4: exitcond (16)  [1/1] 1.45ns  loc: kernel2.cpp:11
:4  %exitcond = icmp eq i11 %i, -1024

ST_4: StgValue_29 (17)  [1/1] 0.00ns  loc: kernel2.cpp:11
:5  br i1 %exitcond, label %3, label %2

ST_4: tmp (22)  [6/6] 5.44ns  loc: kernel2.cpp:14
:3  %tmp = mul nsw i32 %reg0_1, %reg


 <State 5>: 5.44ns
ST_5: tmp (22)  [5/6] 5.44ns  loc: kernel2.cpp:14
:3  %tmp = mul nsw i32 %reg0_1, %reg


 <State 6>: 5.44ns
ST_6: tmp (22)  [4/6] 5.44ns  loc: kernel2.cpp:14
:3  %tmp = mul nsw i32 %reg0_1, %reg


 <State 7>: 5.44ns
ST_7: tmp (22)  [3/6] 5.44ns  loc: kernel2.cpp:14
:3  %tmp = mul nsw i32 %reg0_1, %reg


 <State 8>: 5.44ns
ST_8: tmp (22)  [2/6] 5.44ns  loc: kernel2.cpp:14
:3  %tmp = mul nsw i32 %reg0_1, %reg

ST_8: i_1 (28)  [1/1] 1.40ns  loc: kernel2.cpp:11
:9  %i_1 = add i11 %i, 1


 <State 9>: 7.14ns
ST_9: tmp (22)  [1/6] 5.44ns  loc: kernel2.cpp:14
:3  %tmp = mul nsw i32 %reg0_1, %reg

ST_9: result (23)  [1/1] 1.70ns  loc: kernel2.cpp:14
:4  %result = add nsw i32 %tmp, %reg1_1


 <State 10>: 2.33ns
ST_10: empty (19)  [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1021, i64 1021, i64 1021) nounwind

ST_10: tmp_2 (20)  [1/1] 0.00ns  loc: kernel2.cpp:11
:1  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str) nounwind

ST_10: StgValue_40 (21)  [1/1] 0.00ns  loc: kernel2.cpp:12
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_10: tmp_1 (24)  [1/1] 0.00ns  loc: kernel2.cpp:15
:5  %tmp_1 = zext i11 %i to i64

ST_10: array_addr_3 (25)  [1/1] 0.00ns  loc: kernel2.cpp:15
:6  %array_addr_3 = getelementptr [1024 x i32]* %array_r, i64 0, i64 %tmp_1

ST_10: StgValue_43 (26)  [1/1] 2.33ns  loc: kernel2.cpp:15
:7  store i32 %result, i32* %array_addr_3, align 4

ST_10: empty_2 (27)  [1/1] 0.00ns  loc: kernel2.cpp:25
:8  %empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str, i32 %tmp_2) nounwind

ST_10: StgValue_45 (29)  [1/1] 0.00ns  loc: kernel2.cpp:11
:10  br label %1


 <State 11>: 0.00ns
ST_11: StgValue_46 (31)  [1/1] 0.00ns  loc: kernel2.cpp:27
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.33ns
The critical path consists of the following:
	'getelementptr' operation ('array_addr_1', kernel2.cpp:7) [5]  (0 ns)
	'load' operation ('reg2', kernel2.cpp:7) on array 'array_r' [6]  (2.33 ns)

 <State 2>: 2.33ns
The critical path consists of the following:
	'getelementptr' operation ('array_addr') [3]  (0 ns)
	'load' operation ('reg0', kernel2.cpp:9) on array 'array_r' [9]  (2.33 ns)

 <State 3>: 3.42ns
The critical path consists of the following:
	'load' operation ('reg1', kernel2.cpp:8) on array 'array_r' [8]  (2.33 ns)
	multiplexor before 'phi' operation ('reg1') with incoming values : ('reg2', kernel2.cpp:7) ('reg1', kernel2.cpp:8) ('result', kernel2.cpp:14) [12]  (1.08 ns)

 <State 4>: 5.44ns
The critical path consists of the following:
	'phi' operation ('reg1') with incoming values : ('reg2', kernel2.cpp:7) ('reg1', kernel2.cpp:8) ('result', kernel2.cpp:14) [12]  (0 ns)
	'mul' operation ('tmp', kernel2.cpp:14) [22]  (5.44 ns)

 <State 5>: 5.44ns
The critical path consists of the following:
	'mul' operation ('tmp', kernel2.cpp:14) [22]  (5.44 ns)

 <State 6>: 5.44ns
The critical path consists of the following:
	'mul' operation ('tmp', kernel2.cpp:14) [22]  (5.44 ns)

 <State 7>: 5.44ns
The critical path consists of the following:
	'mul' operation ('tmp', kernel2.cpp:14) [22]  (5.44 ns)

 <State 8>: 5.44ns
The critical path consists of the following:
	'mul' operation ('tmp', kernel2.cpp:14) [22]  (5.44 ns)

 <State 9>: 7.14ns
The critical path consists of the following:
	'mul' operation ('tmp', kernel2.cpp:14) [22]  (5.44 ns)
	'add' operation ('result', kernel2.cpp:14) [23]  (1.7 ns)

 <State 10>: 2.33ns
The critical path consists of the following:
	'getelementptr' operation ('array_addr_3', kernel2.cpp:15) [25]  (0 ns)
	'store' operation (kernel2.cpp:15) of variable 'result', kernel2.cpp:14 on array 'array_r' [26]  (2.33 ns)

 <State 11>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
