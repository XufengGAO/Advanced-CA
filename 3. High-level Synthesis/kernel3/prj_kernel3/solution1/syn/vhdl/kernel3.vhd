-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    hist_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    hist_ce0 : OUT STD_LOGIC;
    hist_we0 : OUT STD_LOGIC;
    hist_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    weight_ce0 : OUT STD_LOGIC;
    weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    index_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    index_ce0 : OUT STD_LOGIC;
    index_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of kernel3 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "kernel3,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.557000,HLS_SYN_LAT=4106,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=983,HLS_SYN_LUT=1330}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (22 downto 0) := "00000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (22 downto 0) := "00000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (22 downto 0) := "00000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (22 downto 0) := "00000001000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (22 downto 0) := "00000010000000000000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (22 downto 0) := "00000100000000000000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (22 downto 0) := "00001000000000000000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (22 downto 0) := "00010000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (22 downto 0) := "00100000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (22 downto 0) := "01000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (22 downto 0) := "10000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_reg_194 : STD_LOGIC_VECTOR (10 downto 0);
    signal hist0_1_reg_205 : STD_LOGIC_VECTOR (31 downto 0);
    signal index5_reg_216 : STD_LOGIC_VECTOR (31 downto 0);
    signal index1_1_reg_226 : STD_LOGIC_VECTOR (31 downto 0);
    signal index0_3_reg_236 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist1_1_reg_246 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist5_reg_258 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal reg_280 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_reg_663 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist_load_reg_585 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fu_271_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist0_reg_605 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist4_v_fu_306_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist4_v_reg_611 : STD_LOGIC_VECTOR (31 downto 0);
    signal index4_fu_314_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal index4_reg_616 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal hist1_reg_638 : STD_LOGIC_VECTOR (31 downto 0);
    signal index1_1_ph_fu_338_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal index1_1_ph_reg_643 : STD_LOGIC_VECTOR (31 downto 0);
    signal index0_3_ph_fu_365_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal index0_3_ph_reg_648 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist1_2_ph_v_fu_379_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist1_2_ph_v_reg_653 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist2_reg_658 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal exitcond_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_exitcond_reg_663 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_399_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_1_reg_677 : STD_LOGIC_VECTOR (10 downto 0);
    signal sel_tmp7_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_reg_687 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal index1_2_fu_472_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal index1_2_reg_693 : STD_LOGIC_VECTOR (31 downto 0);
    signal index0_1_fu_488_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal index0_1_reg_698 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp9_fu_504_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp9_reg_703 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist2_2_pn_fu_519_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_10_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_724 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal tmp_14_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_728 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal i_phi_fu_198_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal hist0_1_phi_fu_209_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal index5_phi_fu_219_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal index1_1_phi_fu_229_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal index0_3_phi_fu_239_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist1_1_phi_fu_251_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist5_phi_fu_262_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_290_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_322_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_393_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_405_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_543_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_554_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal grp_fu_271_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_2_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_358_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp53_v_fu_372_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_464_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp5_fu_480_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp8_fu_496_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal index0_6_fu_512_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (22 downto 0);

    component kernel3_fadd_32nsbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    kernel3_fadd_32nsbkb_U1 : component kernel3_fadd_32nsbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_271_p0,
        din1 => reg_280,
        ce => ap_const_logic_1,
        dout => grp_fu_271_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((exitcond_reg_663 = ap_const_lv1_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_reg_663 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((exitcond_reg_663 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    hist0_1_reg_205_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
                hist0_1_reg_205 <= hist1_reg_638;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) then 
                hist0_1_reg_205 <= hist1_1_reg_246;
            end if; 
        end if;
    end process;

    hist1_1_reg_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
                hist1_1_reg_246 <= hist2_reg_658;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) then 
                hist1_1_reg_246 <= grp_fu_271_p2;
            end if; 
        end if;
    end process;

    hist5_reg_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
                hist5_reg_258 <= hist0_reg_605;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) then 
                hist5_reg_258 <= hist0_1_reg_205;
            end if; 
        end if;
    end process;

    i_reg_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
                i_reg_194 <= ap_const_lv11_3;
            elsif (((exitcond_reg_663 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_194 <= i_1_reg_677;
            end if; 
        end if;
    end process;

    index0_3_reg_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
                index0_3_reg_236 <= index0_3_ph_reg_648;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) then 
                index0_3_reg_236 <= index0_1_reg_698;
            end if; 
        end if;
    end process;

    index1_1_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
                index1_1_reg_226 <= index1_1_ph_reg_643;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) then 
                index1_1_reg_226 <= index1_2_reg_693;
            end if; 
        end if;
    end process;

    index5_reg_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
                index5_reg_216 <= reg_275;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) then 
                index5_reg_216 <= ap_pipeline_reg_pp0_iter1_reg_285;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_reg_663 <= exitcond_reg_663;
                exitcond_reg_663 <= exitcond_fu_387_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                ap_pipeline_reg_pp0_iter1_reg_285 <= reg_285;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then
                hist0_reg_605 <= grp_fu_271_p2;
                hist4_v_reg_611 <= hist4_v_fu_306_p3;
                index4_reg_616 <= index4_fu_314_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state11))) then
                hist1_2_ph_v_reg_653 <= hist1_2_ph_v_fu_379_p3;
                hist1_reg_638 <= grp_fu_271_p2;
                index0_3_ph_reg_648 <= index0_3_ph_fu_365_p3;
                index1_1_ph_reg_643 <= index1_1_ph_fu_338_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then
                hist2_reg_658 <= grp_fu_271_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then
                hist_load_reg_585 <= hist_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_fu_387_p2))) then
                i_1_reg_677 <= i_1_fu_399_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_reg_663 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                index0_1_reg_698 <= index0_1_fu_488_p3;
                index1_2_reg_693 <= index1_2_fu_472_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then
                reg_275 <= index_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_reg_663 = ap_const_lv1_0)))) then
                reg_280 <= weight_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_reg_663 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_state6)))) then
                reg_285 <= index_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_663 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                sel_tmp7_reg_687 <= sel_tmp7_fu_452_p2;
                sel_tmp9_reg_703 <= sel_tmp9_fu_504_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state24))) then
                tmp_10_reg_724 <= tmp_10_fu_548_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state25))) then
                tmp_14_reg_728 <= tmp_14_fu_559_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, exitcond_reg_663)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((exitcond_reg_663 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state15 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state24 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_state25 <= ap_CS_fsm(21 downto 21);
    ap_CS_fsm_state26 <= ap_CS_fsm(22 downto 22);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8 downto 8);

    ap_done_assign_proc : process(ap_CS_fsm_state26)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state26))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state26)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state26))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_387_p2 <= "1" when (i_phi_fu_198_p4 = ap_const_lv11_400) else "0";

    grp_fu_271_p0_assign_proc : process(ap_enable_reg_pp0_iter0, hist_load_reg_585, hist4_v_reg_611, hist1_2_ph_v_reg_653, hist2_2_pn_fu_519_p3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_271_p0 <= hist2_2_pn_fu_519_p3;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_271_p0 <= hist1_2_ph_v_reg_653;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_fu_271_p0 <= hist4_v_reg_611;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            grp_fu_271_p0 <= hist_load_reg_585;
        else 
            grp_fu_271_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    hist0_1_phi_fu_209_p4_assign_proc : process(hist0_1_reg_205, hist1_1_reg_246, ap_pipeline_reg_pp0_iter1_exitcond_reg_663, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) then 
            hist0_1_phi_fu_209_p4 <= hist1_1_reg_246;
        else 
            hist0_1_phi_fu_209_p4 <= hist0_1_reg_205;
        end if; 
    end process;


    hist1_1_phi_fu_251_p4_assign_proc : process(hist1_1_reg_246, grp_fu_271_p2, ap_pipeline_reg_pp0_iter1_exitcond_reg_663, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) then 
            hist1_1_phi_fu_251_p4 <= grp_fu_271_p2;
        else 
            hist1_1_phi_fu_251_p4 <= hist1_1_reg_246;
        end if; 
    end process;

    hist1_2_ph_v_fu_379_p3 <= 
        grp_fu_271_p2 when (tmp_6_fu_327_p2(0) = '1') else 
        sel_tmp53_v_fu_372_p3;
    hist2_2_pn_fu_519_p3 <= 
        hist5_reg_258 when (sel_tmp7_reg_687(0) = '1') else 
        sel_tmp9_reg_703;
    hist4_v_fu_306_p3 <= 
        grp_fu_271_p2 when (tmp_2_fu_300_p2(0) = '1') else 
        hist_q0;
    hist5_phi_fu_262_p4 <= hist5_reg_258;

    hist_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state10, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage3, ap_CS_fsm_state24, ap_CS_fsm_state25, tmp_fu_290_p1, tmp_4_fu_295_p1, tmp_s_fu_322_p1, tmp_13_fu_405_p1, tmp_17_fu_532_p1, tmp_7_fu_543_p1, tmp_12_fu_554_p1, tmp_16_fu_565_p1, ap_CS_fsm_state26)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state26))) then 
            hist_address0 <= tmp_16_fu_565_p1(10 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state25))) then 
            hist_address0 <= tmp_12_fu_554_p1(10 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state24))) then 
            hist_address0 <= tmp_7_fu_543_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            hist_address0 <= tmp_17_fu_532_p1(10 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            hist_address0 <= tmp_13_fu_405_p1(10 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            hist_address0 <= tmp_s_fu_322_p1(10 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            hist_address0 <= tmp_4_fu_295_p1(10 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            hist_address0 <= tmp_fu_290_p1(10 - 1 downto 0);
        else 
            hist_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    hist_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state10, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage3, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_lv1_1 = ap_CS_fsm_state26)))) then 
            hist_ce0 <= ap_const_logic_1;
        else 
            hist_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hist_d0_assign_proc : process(hist0_1_reg_205, hist1_1_reg_246, hist5_reg_258, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_state24, ap_CS_fsm_state25, hist5_phi_fu_262_p4, ap_CS_fsm_state26)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state26))) then 
            hist_d0 <= hist1_1_reg_246;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state25))) then 
            hist_d0 <= hist0_1_reg_205;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state24))) then 
            hist_d0 <= hist5_reg_258;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            hist_d0 <= hist5_phi_fu_262_p4;
        else 
            hist_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    hist_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_reg_663, ap_CS_fsm_pp0_stage3, tmp_10_reg_724, ap_CS_fsm_state24, tmp_14_reg_728, ap_CS_fsm_state25, tmp_15_fu_526_p2, tmp_1_fu_537_p2, ap_CS_fsm_state26)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_reg_663 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = tmp_15_fu_526_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = tmp_1_fu_537_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state25) and (ap_const_lv1_0 = tmp_10_reg_724)) or ((ap_const_lv1_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = tmp_14_reg_728)))) then 
            hist_we0 <= ap_const_logic_1;
        else 
            hist_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_1_fu_399_p2 <= std_logic_vector(unsigned(i_phi_fu_198_p4) + unsigned(ap_const_lv11_1));

    i_phi_fu_198_p4_assign_proc : process(i_reg_194, exitcond_reg_663, ap_CS_fsm_pp0_stage0, i_1_reg_677, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_reg_663 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_198_p4 <= i_1_reg_677;
        else 
            i_phi_fu_198_p4 <= i_reg_194;
        end if; 
    end process;

    index0_1_fu_488_p3 <= 
        index1_1_phi_fu_229_p4 when (sel_tmp7_fu_452_p2(0) = '1') else 
        sel_tmp5_fu_480_p3;
    index0_3_ph_fu_365_p3 <= 
        index4_reg_616 when (tmp_6_fu_327_p2(0) = '1') else 
        sel_tmp4_fu_358_p3;

    index0_3_phi_fu_239_p4_assign_proc : process(index0_3_reg_236, ap_pipeline_reg_pp0_iter1_exitcond_reg_663, ap_CS_fsm_pp0_stage2, index0_1_reg_698, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) then 
            index0_3_phi_fu_239_p4 <= index0_1_reg_698;
        else 
            index0_3_phi_fu_239_p4 <= index0_3_reg_236;
        end if; 
    end process;

    index0_6_fu_512_p3 <= 
        ap_const_lv32_FFFFFFFF when (sel_tmp7_reg_687(0) = '1') else 
        index0_3_reg_236;
    index1_1_ph_fu_338_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_6_fu_327_p2(0) = '1') else 
        reg_285;

    index1_1_phi_fu_229_p4_assign_proc : process(index1_1_reg_226, ap_pipeline_reg_pp0_iter1_exitcond_reg_663, ap_CS_fsm_pp0_stage2, index1_2_reg_693, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) then 
            index1_1_phi_fu_229_p4 <= index1_2_reg_693;
        else 
            index1_1_phi_fu_229_p4 <= index1_1_reg_226;
        end if; 
    end process;

    index1_2_fu_472_p3 <= 
        index5_phi_fu_219_p4 when (or_cond_fu_458_p2(0) = '1') else 
        newSel_fu_464_p3;
    index4_fu_314_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_2_fu_300_p2(0) = '1') else 
        reg_275;

    index5_phi_fu_219_p4_assign_proc : process(index5_reg_216, ap_pipeline_reg_pp0_iter1_reg_285, ap_pipeline_reg_pp0_iter1_exitcond_reg_663, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) then 
            index5_phi_fu_219_p4 <= ap_pipeline_reg_pp0_iter1_reg_285;
        else 
            index5_phi_fu_219_p4 <= index5_reg_216;
        end if; 
    end process;


    index_address0_assign_proc : process(ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_pp0_stage0, tmp_3_fu_393_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            index_address0 <= tmp_3_fu_393_p1(10 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            index_address0 <= ap_const_lv64_2(10 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            index_address0 <= ap_const_lv64_1(10 - 1 downto 0);
        elsif (((ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            index_address0 <= ap_const_lv64_0(10 - 1 downto 0);
        else 
            index_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    index_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            index_ce0 <= ap_const_logic_1;
        else 
            index_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    newSel_fu_464_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_5_fu_410_p2(0) = '1') else 
        index5_phi_fu_219_p4;
    or_cond_fu_458_p2 <= (sel_tmp7_fu_452_p2 or sel_tmp2_fu_434_p2);
    sel_tmp1_fu_428_p2 <= (tmp_5_fu_410_p2 xor ap_const_lv1_1);
    sel_tmp2_fu_434_p2 <= (tmp_9_fu_416_p2 and sel_tmp1_fu_428_p2);
    sel_tmp3_fu_352_p2 <= (tmp_8_fu_333_p2 and sel_tmp_fu_346_p2);
    sel_tmp4_fu_358_p3 <= 
        ap_const_lv32_FFFFFFFF when (sel_tmp3_fu_352_p2(0) = '1') else 
        index4_reg_616;
    sel_tmp53_v_fu_372_p3 <= 
        hist0_reg_605 when (sel_tmp3_fu_352_p2(0) = '1') else 
        hist_q0;
    sel_tmp5_fu_480_p3 <= 
        ap_const_lv32_FFFFFFFF when (sel_tmp2_fu_434_p2(0) = '1') else 
        index1_1_phi_fu_229_p4;
    sel_tmp6_demorgan_fu_440_p2 <= (tmp_5_fu_410_p2 or tmp_9_fu_416_p2);
    sel_tmp6_fu_446_p2 <= (sel_tmp6_demorgan_fu_440_p2 xor ap_const_lv1_1);
    sel_tmp7_fu_452_p2 <= (tmp_11_fu_422_p2 and sel_tmp6_fu_446_p2);
    sel_tmp8_fu_496_p3 <= 
        hist1_1_phi_fu_251_p4 when (tmp_5_fu_410_p2(0) = '1') else 
        hist_q0;
    sel_tmp9_fu_504_p3 <= 
        hist0_1_phi_fu_209_p4 when (sel_tmp2_fu_434_p2(0) = '1') else 
        sel_tmp8_fu_496_p3;
    sel_tmp_fu_346_p2 <= (tmp_6_fu_327_p2 xor ap_const_lv1_1);
    tmp_10_fu_548_p2 <= "1" when (index1_1_reg_226 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_11_fu_422_p2 <= "1" when (reg_285 = index0_3_phi_fu_239_p4) else "0";
        tmp_12_fu_554_p1 <= std_logic_vector(resize(signed(index1_1_reg_226),64));

        tmp_13_fu_405_p1 <= std_logic_vector(resize(signed(index_q0),64));

    tmp_14_fu_559_p2 <= "1" when (index5_reg_216 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_15_fu_526_p2 <= "1" when (index0_6_fu_512_p3 = ap_const_lv32_FFFFFFFF) else "0";
        tmp_16_fu_565_p1 <= std_logic_vector(resize(signed(index5_reg_216),64));

        tmp_17_fu_532_p1 <= std_logic_vector(resize(signed(index0_6_fu_512_p3),64));

    tmp_1_fu_537_p2 <= "1" when (index0_3_reg_236 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_2_fu_300_p2 <= "1" when (reg_285 = reg_275) else "0";
    tmp_3_fu_393_p1 <= std_logic_vector(resize(unsigned(i_phi_fu_198_p4),64));
        tmp_4_fu_295_p1 <= std_logic_vector(resize(signed(index_q0),64));

    tmp_5_fu_410_p2 <= "1" when (reg_285 = index5_phi_fu_219_p4) else "0";
    tmp_6_fu_327_p2 <= "1" when (reg_275 = reg_285) else "0";
        tmp_7_fu_543_p1 <= std_logic_vector(resize(signed(index0_3_reg_236),64));

    tmp_8_fu_333_p2 <= "1" when (reg_275 = index4_reg_616) else "0";
    tmp_9_fu_416_p2 <= "1" when (reg_285 = index1_1_phi_fu_229_p4) else "0";
        tmp_fu_290_p1 <= std_logic_vector(resize(signed(index_q0),64));

        tmp_s_fu_322_p1 <= std_logic_vector(resize(signed(index_q0),64));


    weight_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state10, ap_enable_reg_pp0_iter0, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, tmp_3_fu_393_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            weight_address0 <= tmp_3_fu_393_p1(10 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            weight_address0 <= ap_const_lv64_2(10 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            weight_address0 <= ap_const_lv64_1(10 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            weight_address0 <= ap_const_lv64_0(10 - 1 downto 0);
        else 
            weight_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    weight_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state10, ap_enable_reg_pp0_iter0, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            weight_ce0 <= ap_const_logic_1;
        else 
            weight_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
