// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel3,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.557000,HLS_SYN_LAT=4106,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=983,HLS_SYN_LUT=1330}" *)

module kernel3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        hist_address0,
        hist_ce0,
        hist_we0,
        hist_d0,
        hist_q0,
        weight_address0,
        weight_ce0,
        weight_q0,
        index_address0,
        index_ce0,
        index_q0
);

parameter    ap_ST_fsm_state1 = 23'b1;
parameter    ap_ST_fsm_state2 = 23'b10;
parameter    ap_ST_fsm_state3 = 23'b100;
parameter    ap_ST_fsm_state4 = 23'b1000;
parameter    ap_ST_fsm_state5 = 23'b10000;
parameter    ap_ST_fsm_state6 = 23'b100000;
parameter    ap_ST_fsm_state7 = 23'b1000000;
parameter    ap_ST_fsm_state8 = 23'b10000000;
parameter    ap_ST_fsm_state9 = 23'b100000000;
parameter    ap_ST_fsm_state10 = 23'b1000000000;
parameter    ap_ST_fsm_state11 = 23'b10000000000;
parameter    ap_ST_fsm_state12 = 23'b100000000000;
parameter    ap_ST_fsm_state13 = 23'b1000000000000;
parameter    ap_ST_fsm_state14 = 23'b10000000000000;
parameter    ap_ST_fsm_state15 = 23'b100000000000000;
parameter    ap_ST_fsm_state16 = 23'b1000000000000000;
parameter    ap_ST_fsm_pp0_stage0 = 23'b10000000000000000;
parameter    ap_ST_fsm_pp0_stage1 = 23'b100000000000000000;
parameter    ap_ST_fsm_pp0_stage2 = 23'b1000000000000000000;
parameter    ap_ST_fsm_pp0_stage3 = 23'b10000000000000000000;
parameter    ap_ST_fsm_state24 = 23'b100000000000000000000;
parameter    ap_ST_fsm_state25 = 23'b1000000000000000000000;
parameter    ap_ST_fsm_state26 = 23'b10000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv11_3 = 11'b11;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv11_400 = 11'b10000000000;
parameter    ap_const_lv11_1 = 11'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] hist_address0;
output   hist_ce0;
output   hist_we0;
output  [31:0] hist_d0;
input  [31:0] hist_q0;
output  [9:0] weight_address0;
output   weight_ce0;
input  [31:0] weight_q0;
output  [9:0] index_address0;
output   index_ce0;
input  [31:0] index_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] hist_address0;
reg hist_ce0;
reg hist_we0;
reg[31:0] hist_d0;
reg[9:0] weight_address0;
reg weight_ce0;
reg[9:0] index_address0;
reg index_ce0;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [10:0] i_reg_194;
reg   [31:0] hist0_1_reg_205;
reg   [31:0] index5_reg_216;
reg   [31:0] index1_1_reg_226;
reg   [31:0] index0_3_reg_236;
reg   [31:0] hist1_1_reg_246;
reg   [31:0] hist5_reg_258;
reg   [31:0] reg_275;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] ap_CS_fsm_state10;
reg   [31:0] reg_280;
wire   [0:0] ap_CS_fsm_state3;
wire   [0:0] ap_CS_fsm_pp0_stage1;
wire   [0:0] ap_CS_fsm_state7;
wire   [0:0] ap_CS_fsm_state11;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond_reg_663;
reg   [31:0] reg_285;
wire   [0:0] ap_CS_fsm_state6;
reg   [31:0] ap_pipeline_reg_pp0_iter1_reg_285;
reg   [31:0] hist_load_reg_585;
wire   [0:0] ap_CS_fsm_state5;
wire   [31:0] grp_fu_271_p2;
reg   [31:0] hist0_reg_605;
wire   [31:0] hist4_v_fu_306_p3;
reg   [31:0] hist4_v_reg_611;
wire   [31:0] index4_fu_314_p3;
reg   [31:0] index4_reg_616;
wire   [0:0] ap_CS_fsm_state9;
reg   [31:0] hist1_reg_638;
wire   [31:0] index1_1_ph_fu_338_p3;
reg   [31:0] index1_1_ph_reg_643;
wire   [31:0] index0_3_ph_fu_365_p3;
reg   [31:0] index0_3_ph_reg_648;
wire   [31:0] hist1_2_ph_v_fu_379_p3;
reg   [31:0] hist1_2_ph_v_reg_653;
reg   [31:0] hist2_reg_658;
wire   [0:0] ap_CS_fsm_state15;
wire   [0:0] exitcond_fu_387_p2;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_reg_663;
wire   [10:0] i_1_fu_399_p2;
reg   [10:0] i_1_reg_677;
wire   [0:0] sel_tmp7_fu_452_p2;
reg   [0:0] sel_tmp7_reg_687;
wire   [0:0] ap_CS_fsm_pp0_stage2;
wire   [31:0] index1_2_fu_472_p3;
reg   [31:0] index1_2_reg_693;
wire   [31:0] index0_1_fu_488_p3;
reg   [31:0] index0_1_reg_698;
wire   [31:0] sel_tmp9_fu_504_p3;
reg   [31:0] sel_tmp9_reg_703;
wire   [31:0] hist2_2_pn_fu_519_p3;
wire   [0:0] ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter1;
wire   [0:0] tmp_10_fu_548_p2;
reg   [0:0] tmp_10_reg_724;
wire   [0:0] ap_CS_fsm_state24;
wire   [0:0] tmp_14_fu_559_p2;
reg   [0:0] tmp_14_reg_728;
wire   [0:0] ap_CS_fsm_state25;
wire   [0:0] ap_CS_fsm_state16;
reg   [10:0] i_phi_fu_198_p4;
reg   [31:0] hist0_1_phi_fu_209_p4;
reg   [31:0] index5_phi_fu_219_p4;
reg   [31:0] index1_1_phi_fu_229_p4;
reg   [31:0] index0_3_phi_fu_239_p4;
reg   [31:0] hist1_1_phi_fu_251_p4;
wire   [31:0] hist5_phi_fu_262_p4;
wire  signed [63:0] tmp_fu_290_p1;
wire  signed [63:0] tmp_4_fu_295_p1;
wire  signed [63:0] tmp_s_fu_322_p1;
wire   [63:0] tmp_3_fu_393_p1;
wire  signed [63:0] tmp_13_fu_405_p1;
wire  signed [63:0] tmp_17_fu_532_p1;
wire   [0:0] tmp_15_fu_526_p2;
wire  signed [63:0] tmp_7_fu_543_p1;
wire   [0:0] tmp_1_fu_537_p2;
wire  signed [63:0] tmp_12_fu_554_p1;
wire  signed [63:0] tmp_16_fu_565_p1;
wire   [0:0] ap_CS_fsm_state26;
reg   [31:0] grp_fu_271_p0;
wire   [0:0] ap_CS_fsm_state4;
wire   [0:0] ap_CS_fsm_state8;
wire   [0:0] ap_CS_fsm_state12;
wire   [0:0] tmp_2_fu_300_p2;
wire   [0:0] tmp_6_fu_327_p2;
wire   [0:0] tmp_8_fu_333_p2;
wire   [0:0] sel_tmp_fu_346_p2;
wire   [0:0] sel_tmp3_fu_352_p2;
wire   [31:0] sel_tmp4_fu_358_p3;
wire   [31:0] sel_tmp53_v_fu_372_p3;
wire   [0:0] tmp_5_fu_410_p2;
wire   [0:0] tmp_9_fu_416_p2;
wire   [0:0] sel_tmp1_fu_428_p2;
wire   [0:0] sel_tmp6_demorgan_fu_440_p2;
wire   [0:0] tmp_11_fu_422_p2;
wire   [0:0] sel_tmp6_fu_446_p2;
wire   [0:0] sel_tmp2_fu_434_p2;
wire   [0:0] or_cond_fu_458_p2;
wire   [31:0] newSel_fu_464_p3;
wire   [31:0] sel_tmp5_fu_480_p3;
wire   [31:0] sel_tmp8_fu_496_p3;
wire   [31:0] index0_6_fu_512_p3;
reg   [22:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

kernel3_fadd_32nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel3_fadd_32nsbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_271_p0),
    .din1(reg_280),
    .ce(1'b1),
    .dout(grp_fu_271_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & ~(exitcond_reg_663 == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_reg_663 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_pp0_stage3) & ~(exitcond_reg_663 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        hist0_1_reg_205 <= hist1_reg_638;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) begin
        hist0_1_reg_205 <= hist1_1_reg_246;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        hist1_1_reg_246 <= hist2_reg_658;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) begin
        hist1_1_reg_246 <= grp_fu_271_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        hist5_reg_258 <= hist0_reg_605;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) begin
        hist5_reg_258 <= hist0_1_reg_205;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_reg_194 <= ap_const_lv11_3;
    end else if (((exitcond_reg_663 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_reg_194 <= i_1_reg_677;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        index0_3_reg_236 <= index0_3_ph_reg_648;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) begin
        index0_3_reg_236 <= index0_1_reg_698;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        index1_1_reg_226 <= index1_1_ph_reg_643;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) begin
        index1_1_reg_226 <= index1_2_reg_693;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        index5_reg_216 <= reg_275;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) begin
        index5_reg_216 <= ap_pipeline_reg_pp0_iter1_reg_285;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_reg_663 <= exitcond_reg_663;
        exitcond_reg_663 <= exitcond_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
        ap_pipeline_reg_pp0_iter1_reg_285 <= reg_285;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        hist0_reg_605 <= grp_fu_271_p2;
        hist4_v_reg_611 <= hist4_v_fu_306_p3;
        index4_reg_616 <= index4_fu_314_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        hist1_2_ph_v_reg_653 <= hist1_2_ph_v_fu_379_p3;
        hist1_reg_638 <= grp_fu_271_p2;
        index0_3_ph_reg_648 <= index0_3_ph_fu_365_p3;
        index1_1_ph_reg_643 <= index1_1_ph_fu_338_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        hist2_reg_658 <= grp_fu_271_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        hist_load_reg_585 <= hist_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_fu_387_p2))) begin
        i_1_reg_677 <= i_1_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_reg_663 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        index0_1_reg_698 <= index0_1_fu_488_p3;
        index1_2_reg_693 <= index1_2_fu_472_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_275 <= index_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_reg_663 == 1'b0)))) begin
        reg_280 <= weight_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_reg_663 == 1'b0)) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_285 <= index_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_663 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        sel_tmp7_reg_687 <= sel_tmp7_fu_452_p2;
        sel_tmp9_reg_703 <= sel_tmp9_fu_504_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_10_reg_724 <= tmp_10_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_14_reg_728 <= tmp_14_fu_559_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_271_p0 = hist2_2_pn_fu_519_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_271_p0 = hist1_2_ph_v_reg_653;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_271_p0 = hist4_v_reg_611;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_271_p0 = hist_load_reg_585;
    end else begin
        grp_fu_271_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) begin
        hist0_1_phi_fu_209_p4 = hist1_1_reg_246;
    end else begin
        hist0_1_phi_fu_209_p4 = hist0_1_reg_205;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) begin
        hist1_1_phi_fu_251_p4 = grp_fu_271_p2;
    end else begin
        hist1_1_phi_fu_251_p4 = hist1_1_reg_246;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        hist_address0 = tmp_16_fu_565_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        hist_address0 = tmp_12_fu_554_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        hist_address0 = tmp_7_fu_543_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        hist_address0 = tmp_17_fu_532_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        hist_address0 = tmp_13_fu_405_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        hist_address0 = tmp_s_fu_322_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        hist_address0 = tmp_4_fu_295_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hist_address0 = tmp_fu_290_p1;
    end else begin
        hist_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | (1'b1 == ap_CS_fsm_state26))) begin
        hist_ce0 = 1'b1;
    end else begin
        hist_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        hist_d0 = hist1_1_reg_246;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        hist_d0 = hist0_1_reg_205;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        hist_d0 = hist5_reg_258;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        hist_d0 = hist5_phi_fu_262_p4;
    end else begin
        hist_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_reg_663 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == tmp_15_fu_526_p2)) | ((1'b1 == ap_CS_fsm_state24) & (1'b0 == tmp_1_fu_537_p2)) | ((1'b1 == ap_CS_fsm_state25) & (1'b0 == tmp_10_reg_724)) | ((1'b1 == ap_CS_fsm_state26) & (1'b0 == tmp_14_reg_728)))) begin
        hist_we0 = 1'b1;
    end else begin
        hist_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_663 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_198_p4 = i_1_reg_677;
    end else begin
        i_phi_fu_198_p4 = i_reg_194;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) begin
        index0_3_phi_fu_239_p4 = index0_1_reg_698;
    end else begin
        index0_3_phi_fu_239_p4 = index0_3_reg_236;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) begin
        index1_1_phi_fu_229_p4 = index1_2_reg_693;
    end else begin
        index1_1_phi_fu_229_p4 = index1_1_reg_226;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_reg_663))) begin
        index5_phi_fu_219_p4 = ap_pipeline_reg_pp0_iter1_reg_285;
    end else begin
        index5_phi_fu_219_p4 = index5_reg_216;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        index_address0 = tmp_3_fu_393_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        index_address0 = ap_const_lv64_2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        index_address0 = ap_const_lv64_1;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        index_address0 = ap_const_lv64_0;
    end else begin
        index_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        index_ce0 = 1'b1;
    end else begin
        index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_address0 = tmp_3_fu_393_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_address0 = ap_const_lv64_2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        weight_address0 = ap_const_lv64_1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        weight_address0 = ap_const_lv64_0;
    end else begin
        weight_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weight_ce0 = 1'b1;
    end else begin
        weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage1;
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
        end
        ap_ST_fsm_pp0_stage3 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(exitcond_reg_663 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state24 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_state25 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_state26 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign exitcond_fu_387_p2 = ((i_phi_fu_198_p4 == ap_const_lv11_400) ? 1'b1 : 1'b0);

assign hist1_2_ph_v_fu_379_p3 = ((tmp_6_fu_327_p2[0:0] === 1'b1) ? grp_fu_271_p2 : sel_tmp53_v_fu_372_p3);

assign hist2_2_pn_fu_519_p3 = ((sel_tmp7_reg_687[0:0] === 1'b1) ? hist5_reg_258 : sel_tmp9_reg_703);

assign hist4_v_fu_306_p3 = ((tmp_2_fu_300_p2[0:0] === 1'b1) ? grp_fu_271_p2 : hist_q0);

assign hist5_phi_fu_262_p4 = hist5_reg_258;

assign i_1_fu_399_p2 = (i_phi_fu_198_p4 + ap_const_lv11_1);

assign index0_1_fu_488_p3 = ((sel_tmp7_fu_452_p2[0:0] === 1'b1) ? index1_1_phi_fu_229_p4 : sel_tmp5_fu_480_p3);

assign index0_3_ph_fu_365_p3 = ((tmp_6_fu_327_p2[0:0] === 1'b1) ? index4_reg_616 : sel_tmp4_fu_358_p3);

assign index0_6_fu_512_p3 = ((sel_tmp7_reg_687[0:0] === 1'b1) ? ap_const_lv32_FFFFFFFF : index0_3_reg_236);

assign index1_1_ph_fu_338_p3 = ((tmp_6_fu_327_p2[0:0] === 1'b1) ? ap_const_lv32_FFFFFFFF : reg_285);

assign index1_2_fu_472_p3 = ((or_cond_fu_458_p2[0:0] === 1'b1) ? index5_phi_fu_219_p4 : newSel_fu_464_p3);

assign index4_fu_314_p3 = ((tmp_2_fu_300_p2[0:0] === 1'b1) ? ap_const_lv32_FFFFFFFF : reg_275);

assign newSel_fu_464_p3 = ((tmp_5_fu_410_p2[0:0] === 1'b1) ? ap_const_lv32_FFFFFFFF : index5_phi_fu_219_p4);

assign or_cond_fu_458_p2 = (sel_tmp7_fu_452_p2 | sel_tmp2_fu_434_p2);

assign sel_tmp1_fu_428_p2 = (tmp_5_fu_410_p2 ^ 1'b1);

assign sel_tmp2_fu_434_p2 = (tmp_9_fu_416_p2 & sel_tmp1_fu_428_p2);

assign sel_tmp3_fu_352_p2 = (tmp_8_fu_333_p2 & sel_tmp_fu_346_p2);

assign sel_tmp4_fu_358_p3 = ((sel_tmp3_fu_352_p2[0:0] === 1'b1) ? ap_const_lv32_FFFFFFFF : index4_reg_616);

assign sel_tmp53_v_fu_372_p3 = ((sel_tmp3_fu_352_p2[0:0] === 1'b1) ? hist0_reg_605 : hist_q0);

assign sel_tmp5_fu_480_p3 = ((sel_tmp2_fu_434_p2[0:0] === 1'b1) ? ap_const_lv32_FFFFFFFF : index1_1_phi_fu_229_p4);

assign sel_tmp6_demorgan_fu_440_p2 = (tmp_5_fu_410_p2 | tmp_9_fu_416_p2);

assign sel_tmp6_fu_446_p2 = (sel_tmp6_demorgan_fu_440_p2 ^ 1'b1);

assign sel_tmp7_fu_452_p2 = (tmp_11_fu_422_p2 & sel_tmp6_fu_446_p2);

assign sel_tmp8_fu_496_p3 = ((tmp_5_fu_410_p2[0:0] === 1'b1) ? hist1_1_phi_fu_251_p4 : hist_q0);

assign sel_tmp9_fu_504_p3 = ((sel_tmp2_fu_434_p2[0:0] === 1'b1) ? hist0_1_phi_fu_209_p4 : sel_tmp8_fu_496_p3);

assign sel_tmp_fu_346_p2 = (tmp_6_fu_327_p2 ^ 1'b1);

assign tmp_10_fu_548_p2 = ((index1_1_reg_226 == ap_const_lv32_FFFFFFFF) ? 1'b1 : 1'b0);

assign tmp_11_fu_422_p2 = ((reg_285 == index0_3_phi_fu_239_p4) ? 1'b1 : 1'b0);

assign tmp_12_fu_554_p1 = $signed(index1_1_reg_226);

assign tmp_13_fu_405_p1 = $signed(index_q0);

assign tmp_14_fu_559_p2 = ((index5_reg_216 == ap_const_lv32_FFFFFFFF) ? 1'b1 : 1'b0);

assign tmp_15_fu_526_p2 = ((index0_6_fu_512_p3 == ap_const_lv32_FFFFFFFF) ? 1'b1 : 1'b0);

assign tmp_16_fu_565_p1 = $signed(index5_reg_216);

assign tmp_17_fu_532_p1 = $signed(index0_6_fu_512_p3);

assign tmp_1_fu_537_p2 = ((index0_3_reg_236 == ap_const_lv32_FFFFFFFF) ? 1'b1 : 1'b0);

assign tmp_2_fu_300_p2 = ((reg_285 == reg_275) ? 1'b1 : 1'b0);

assign tmp_3_fu_393_p1 = i_phi_fu_198_p4;

assign tmp_4_fu_295_p1 = $signed(index_q0);

assign tmp_5_fu_410_p2 = ((reg_285 == index5_phi_fu_219_p4) ? 1'b1 : 1'b0);

assign tmp_6_fu_327_p2 = ((reg_275 == reg_285) ? 1'b1 : 1'b0);

assign tmp_7_fu_543_p1 = $signed(index0_3_reg_236);

assign tmp_8_fu_333_p2 = ((reg_275 == index4_reg_616) ? 1'b1 : 1'b0);

assign tmp_9_fu_416_p2 = ((reg_285 == index1_1_phi_fu_229_p4) ? 1'b1 : 1'b0);

assign tmp_fu_290_p1 = $signed(index_q0);

assign tmp_s_fu_322_p1 = $signed(index_q0);

endmodule //kernel3
