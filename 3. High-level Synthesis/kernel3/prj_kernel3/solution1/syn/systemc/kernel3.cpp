// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kernel3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kernel3::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kernel3::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> kernel3::ap_ST_fsm_state1 = "1";
const sc_lv<23> kernel3::ap_ST_fsm_state2 = "10";
const sc_lv<23> kernel3::ap_ST_fsm_state3 = "100";
const sc_lv<23> kernel3::ap_ST_fsm_state4 = "1000";
const sc_lv<23> kernel3::ap_ST_fsm_state5 = "10000";
const sc_lv<23> kernel3::ap_ST_fsm_state6 = "100000";
const sc_lv<23> kernel3::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> kernel3::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> kernel3::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> kernel3::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> kernel3::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> kernel3::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> kernel3::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> kernel3::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> kernel3::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> kernel3::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> kernel3::ap_ST_fsm_pp0_stage0 = "10000000000000000";
const sc_lv<23> kernel3::ap_ST_fsm_pp0_stage1 = "100000000000000000";
const sc_lv<23> kernel3::ap_ST_fsm_pp0_stage2 = "1000000000000000000";
const sc_lv<23> kernel3::ap_ST_fsm_pp0_stage3 = "10000000000000000000";
const sc_lv<23> kernel3::ap_ST_fsm_state24 = "100000000000000000000";
const sc_lv<23> kernel3::ap_ST_fsm_state25 = "1000000000000000000000";
const sc_lv<23> kernel3::ap_ST_fsm_state26 = "10000000000000000000000";
const sc_lv<32> kernel3::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> kernel3::ap_const_lv1_1 = "1";
const sc_lv<32> kernel3::ap_const_lv32_1 = "1";
const sc_lv<32> kernel3::ap_const_lv32_9 = "1001";
const sc_lv<32> kernel3::ap_const_lv32_2 = "10";
const sc_lv<32> kernel3::ap_const_lv32_11 = "10001";
const sc_lv<32> kernel3::ap_const_lv32_6 = "110";
const sc_lv<32> kernel3::ap_const_lv32_A = "1010";
const sc_lv<1> kernel3::ap_const_lv1_0 = "0";
const sc_lv<32> kernel3::ap_const_lv32_5 = "101";
const sc_lv<32> kernel3::ap_const_lv32_4 = "100";
const sc_lv<32> kernel3::ap_const_lv32_8 = "1000";
const sc_lv<32> kernel3::ap_const_lv32_E = "1110";
const sc_lv<32> kernel3::ap_const_lv32_10 = "10000";
const sc_lv<32> kernel3::ap_const_lv32_12 = "10010";
const sc_lv<32> kernel3::ap_const_lv32_13 = "10011";
const sc_lv<32> kernel3::ap_const_lv32_14 = "10100";
const sc_lv<32> kernel3::ap_const_lv32_15 = "10101";
const sc_lv<32> kernel3::ap_const_lv32_F = "1111";
const sc_lv<11> kernel3::ap_const_lv11_3 = "11";
const sc_lv<64> kernel3::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> kernel3::ap_const_lv64_1 = "1";
const sc_lv<64> kernel3::ap_const_lv64_2 = "10";
const sc_lv<32> kernel3::ap_const_lv32_16 = "10110";
const sc_lv<32> kernel3::ap_const_lv32_3 = "11";
const sc_lv<32> kernel3::ap_const_lv32_7 = "111";
const sc_lv<32> kernel3::ap_const_lv32_B = "1011";
const sc_lv<32> kernel3::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<11> kernel3::ap_const_lv11_400 = "10000000000";
const sc_lv<11> kernel3::ap_const_lv11_1 = "1";

kernel3::kernel3(sc_module_name name) : sc_module(name), mVcdFile(0) {
    kernel3_fadd_32nsbkb_U1 = new kernel3_fadd_32nsbkb<1,4,32,32,32>("kernel3_fadd_32nsbkb_U1");
    kernel3_fadd_32nsbkb_U1->clk(ap_clk);
    kernel3_fadd_32nsbkb_U1->reset(ap_rst);
    kernel3_fadd_32nsbkb_U1->din0(grp_fu_271_p0);
    kernel3_fadd_32nsbkb_U1->din1(reg_280);
    kernel3_fadd_32nsbkb_U1->ce(ap_var_for_const0);
    kernel3_fadd_32nsbkb_U1->dout(grp_fu_271_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_exitcond_fu_387_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_phi_fu_198_p4 );

    SC_METHOD(thread_grp_fu_271_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( hist_load_reg_585 );
    sensitive << ( hist4_v_reg_611 );
    sensitive << ( hist1_2_ph_v_reg_653 );
    sensitive << ( hist2_2_pn_fu_519_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_hist0_1_phi_fu_209_p4);
    sensitive << ( hist0_1_reg_205 );
    sensitive << ( hist1_1_reg_246 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_reg_663 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_hist1_1_phi_fu_251_p4);
    sensitive << ( hist1_1_reg_246 );
    sensitive << ( grp_fu_271_p2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_reg_663 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_hist1_2_ph_v_fu_379_p3);
    sensitive << ( grp_fu_271_p2 );
    sensitive << ( tmp_6_fu_327_p2 );
    sensitive << ( sel_tmp53_v_fu_372_p3 );

    SC_METHOD(thread_hist2_2_pn_fu_519_p3);
    sensitive << ( hist5_reg_258 );
    sensitive << ( sel_tmp7_reg_687 );
    sensitive << ( sel_tmp9_reg_703 );

    SC_METHOD(thread_hist4_v_fu_306_p3);
    sensitive << ( hist_q0 );
    sensitive << ( grp_fu_271_p2 );
    sensitive << ( tmp_2_fu_300_p2 );

    SC_METHOD(thread_hist5_phi_fu_262_p4);
    sensitive << ( hist5_reg_258 );

    SC_METHOD(thread_hist_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( tmp_fu_290_p1 );
    sensitive << ( tmp_4_fu_295_p1 );
    sensitive << ( tmp_s_fu_322_p1 );
    sensitive << ( tmp_13_fu_405_p1 );
    sensitive << ( tmp_17_fu_532_p1 );
    sensitive << ( tmp_7_fu_543_p1 );
    sensitive << ( tmp_12_fu_554_p1 );
    sensitive << ( tmp_16_fu_565_p1 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_hist_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_hist_d0);
    sensitive << ( hist0_1_reg_205 );
    sensitive << ( hist1_1_reg_246 );
    sensitive << ( hist5_reg_258 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( hist5_phi_fu_262_p4 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_hist_we0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_reg_663 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( tmp_10_reg_724 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_14_reg_728 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( tmp_15_fu_526_p2 );
    sensitive << ( tmp_1_fu_537_p2 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_i_1_fu_399_p2);
    sensitive << ( i_phi_fu_198_p4 );

    SC_METHOD(thread_i_phi_fu_198_p4);
    sensitive << ( i_reg_194 );
    sensitive << ( exitcond_reg_663 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_1_reg_677 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_index0_1_fu_488_p3);
    sensitive << ( sel_tmp7_fu_452_p2 );
    sensitive << ( index1_1_phi_fu_229_p4 );
    sensitive << ( sel_tmp5_fu_480_p3 );

    SC_METHOD(thread_index0_3_ph_fu_365_p3);
    sensitive << ( index4_reg_616 );
    sensitive << ( tmp_6_fu_327_p2 );
    sensitive << ( sel_tmp4_fu_358_p3 );

    SC_METHOD(thread_index0_3_phi_fu_239_p4);
    sensitive << ( index0_3_reg_236 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_reg_663 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( index0_1_reg_698 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_index0_6_fu_512_p3);
    sensitive << ( index0_3_reg_236 );
    sensitive << ( sel_tmp7_reg_687 );

    SC_METHOD(thread_index1_1_ph_fu_338_p3);
    sensitive << ( reg_285 );
    sensitive << ( tmp_6_fu_327_p2 );

    SC_METHOD(thread_index1_1_phi_fu_229_p4);
    sensitive << ( index1_1_reg_226 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_reg_663 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( index1_2_reg_693 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_index1_2_fu_472_p3);
    sensitive << ( index5_phi_fu_219_p4 );
    sensitive << ( or_cond_fu_458_p2 );
    sensitive << ( newSel_fu_464_p3 );

    SC_METHOD(thread_index4_fu_314_p3);
    sensitive << ( reg_275 );
    sensitive << ( tmp_2_fu_300_p2 );

    SC_METHOD(thread_index5_phi_fu_219_p4);
    sensitive << ( index5_reg_216 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reg_285 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_reg_663 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_index_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_fu_393_p1 );

    SC_METHOD(thread_index_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_newSel_fu_464_p3);
    sensitive << ( index5_phi_fu_219_p4 );
    sensitive << ( tmp_5_fu_410_p2 );

    SC_METHOD(thread_or_cond_fu_458_p2);
    sensitive << ( sel_tmp7_fu_452_p2 );
    sensitive << ( sel_tmp2_fu_434_p2 );

    SC_METHOD(thread_sel_tmp1_fu_428_p2);
    sensitive << ( tmp_5_fu_410_p2 );

    SC_METHOD(thread_sel_tmp2_fu_434_p2);
    sensitive << ( tmp_9_fu_416_p2 );
    sensitive << ( sel_tmp1_fu_428_p2 );

    SC_METHOD(thread_sel_tmp3_fu_352_p2);
    sensitive << ( tmp_8_fu_333_p2 );
    sensitive << ( sel_tmp_fu_346_p2 );

    SC_METHOD(thread_sel_tmp4_fu_358_p3);
    sensitive << ( index4_reg_616 );
    sensitive << ( sel_tmp3_fu_352_p2 );

    SC_METHOD(thread_sel_tmp53_v_fu_372_p3);
    sensitive << ( hist_q0 );
    sensitive << ( hist0_reg_605 );
    sensitive << ( sel_tmp3_fu_352_p2 );

    SC_METHOD(thread_sel_tmp5_fu_480_p3);
    sensitive << ( index1_1_phi_fu_229_p4 );
    sensitive << ( sel_tmp2_fu_434_p2 );

    SC_METHOD(thread_sel_tmp6_demorgan_fu_440_p2);
    sensitive << ( tmp_5_fu_410_p2 );
    sensitive << ( tmp_9_fu_416_p2 );

    SC_METHOD(thread_sel_tmp6_fu_446_p2);
    sensitive << ( sel_tmp6_demorgan_fu_440_p2 );

    SC_METHOD(thread_sel_tmp7_fu_452_p2);
    sensitive << ( tmp_11_fu_422_p2 );
    sensitive << ( sel_tmp6_fu_446_p2 );

    SC_METHOD(thread_sel_tmp8_fu_496_p3);
    sensitive << ( hist_q0 );
    sensitive << ( hist1_1_phi_fu_251_p4 );
    sensitive << ( tmp_5_fu_410_p2 );

    SC_METHOD(thread_sel_tmp9_fu_504_p3);
    sensitive << ( hist0_1_phi_fu_209_p4 );
    sensitive << ( sel_tmp2_fu_434_p2 );
    sensitive << ( sel_tmp8_fu_496_p3 );

    SC_METHOD(thread_sel_tmp_fu_346_p2);
    sensitive << ( tmp_6_fu_327_p2 );

    SC_METHOD(thread_tmp_10_fu_548_p2);
    sensitive << ( index1_1_reg_226 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_tmp_11_fu_422_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_reg_663 );
    sensitive << ( reg_285 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( index0_3_phi_fu_239_p4 );

    SC_METHOD(thread_tmp_12_fu_554_p1);
    sensitive << ( index1_1_reg_226 );

    SC_METHOD(thread_tmp_13_fu_405_p1);
    sensitive << ( index_q0 );

    SC_METHOD(thread_tmp_14_fu_559_p2);
    sensitive << ( index5_reg_216 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_tmp_15_fu_526_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_reg_663 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( index0_6_fu_512_p3 );

    SC_METHOD(thread_tmp_16_fu_565_p1);
    sensitive << ( index5_reg_216 );

    SC_METHOD(thread_tmp_17_fu_532_p1);
    sensitive << ( index0_6_fu_512_p3 );

    SC_METHOD(thread_tmp_1_fu_537_p2);
    sensitive << ( index0_3_reg_236 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_tmp_2_fu_300_p2);
    sensitive << ( reg_275 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_3_fu_393_p1);
    sensitive << ( i_phi_fu_198_p4 );

    SC_METHOD(thread_tmp_4_fu_295_p1);
    sensitive << ( index_q0 );

    SC_METHOD(thread_tmp_5_fu_410_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_reg_663 );
    sensitive << ( reg_285 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( index5_phi_fu_219_p4 );

    SC_METHOD(thread_tmp_6_fu_327_p2);
    sensitive << ( reg_275 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_7_fu_543_p1);
    sensitive << ( index0_3_reg_236 );

    SC_METHOD(thread_tmp_8_fu_333_p2);
    sensitive << ( reg_275 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( index4_reg_616 );

    SC_METHOD(thread_tmp_9_fu_416_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_reg_663 );
    sensitive << ( reg_285 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( index1_1_phi_fu_229_p4 );

    SC_METHOD(thread_tmp_fu_290_p1);
    sensitive << ( index_q0 );

    SC_METHOD(thread_tmp_s_fu_322_p1);
    sensitive << ( index_q0 );

    SC_METHOD(thread_weight_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_fu_393_p1 );

    SC_METHOD(thread_weight_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_reg_663 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kernel3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, hist_address0, "(port)hist_address0");
    sc_trace(mVcdFile, hist_ce0, "(port)hist_ce0");
    sc_trace(mVcdFile, hist_we0, "(port)hist_we0");
    sc_trace(mVcdFile, hist_d0, "(port)hist_d0");
    sc_trace(mVcdFile, hist_q0, "(port)hist_q0");
    sc_trace(mVcdFile, weight_address0, "(port)weight_address0");
    sc_trace(mVcdFile, weight_ce0, "(port)weight_ce0");
    sc_trace(mVcdFile, weight_q0, "(port)weight_q0");
    sc_trace(mVcdFile, index_address0, "(port)index_address0");
    sc_trace(mVcdFile, index_ce0, "(port)index_ce0");
    sc_trace(mVcdFile, index_q0, "(port)index_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_reg_194, "i_reg_194");
    sc_trace(mVcdFile, hist0_1_reg_205, "hist0_1_reg_205");
    sc_trace(mVcdFile, index5_reg_216, "index5_reg_216");
    sc_trace(mVcdFile, index1_1_reg_226, "index1_1_reg_226");
    sc_trace(mVcdFile, index0_3_reg_236, "index0_3_reg_236");
    sc_trace(mVcdFile, hist1_1_reg_246, "hist1_1_reg_246");
    sc_trace(mVcdFile, hist5_reg_258, "hist5_reg_258");
    sc_trace(mVcdFile, reg_275, "reg_275");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, reg_280, "reg_280");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond_reg_663, "exitcond_reg_663");
    sc_trace(mVcdFile, reg_285, "reg_285");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_reg_285, "ap_pipeline_reg_pp0_iter1_reg_285");
    sc_trace(mVcdFile, hist_load_reg_585, "hist_load_reg_585");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_271_p2, "grp_fu_271_p2");
    sc_trace(mVcdFile, hist0_reg_605, "hist0_reg_605");
    sc_trace(mVcdFile, hist4_v_fu_306_p3, "hist4_v_fu_306_p3");
    sc_trace(mVcdFile, hist4_v_reg_611, "hist4_v_reg_611");
    sc_trace(mVcdFile, index4_fu_314_p3, "index4_fu_314_p3");
    sc_trace(mVcdFile, index4_reg_616, "index4_reg_616");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, hist1_reg_638, "hist1_reg_638");
    sc_trace(mVcdFile, index1_1_ph_fu_338_p3, "index1_1_ph_fu_338_p3");
    sc_trace(mVcdFile, index1_1_ph_reg_643, "index1_1_ph_reg_643");
    sc_trace(mVcdFile, index0_3_ph_fu_365_p3, "index0_3_ph_fu_365_p3");
    sc_trace(mVcdFile, index0_3_ph_reg_648, "index0_3_ph_reg_648");
    sc_trace(mVcdFile, hist1_2_ph_v_fu_379_p3, "hist1_2_ph_v_fu_379_p3");
    sc_trace(mVcdFile, hist1_2_ph_v_reg_653, "hist1_2_ph_v_reg_653");
    sc_trace(mVcdFile, hist2_reg_658, "hist2_reg_658");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, exitcond_fu_387_p2, "exitcond_fu_387_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_exitcond_reg_663, "ap_pipeline_reg_pp0_iter1_exitcond_reg_663");
    sc_trace(mVcdFile, i_1_fu_399_p2, "i_1_fu_399_p2");
    sc_trace(mVcdFile, i_1_reg_677, "i_1_reg_677");
    sc_trace(mVcdFile, sel_tmp7_fu_452_p2, "sel_tmp7_fu_452_p2");
    sc_trace(mVcdFile, sel_tmp7_reg_687, "sel_tmp7_reg_687");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, index1_2_fu_472_p3, "index1_2_fu_472_p3");
    sc_trace(mVcdFile, index1_2_reg_693, "index1_2_reg_693");
    sc_trace(mVcdFile, index0_1_fu_488_p3, "index0_1_fu_488_p3");
    sc_trace(mVcdFile, index0_1_reg_698, "index0_1_reg_698");
    sc_trace(mVcdFile, sel_tmp9_fu_504_p3, "sel_tmp9_fu_504_p3");
    sc_trace(mVcdFile, sel_tmp9_reg_703, "sel_tmp9_reg_703");
    sc_trace(mVcdFile, hist2_2_pn_fu_519_p3, "hist2_2_pn_fu_519_p3");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, tmp_10_fu_548_p2, "tmp_10_fu_548_p2");
    sc_trace(mVcdFile, tmp_10_reg_724, "tmp_10_reg_724");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, tmp_14_fu_559_p2, "tmp_14_fu_559_p2");
    sc_trace(mVcdFile, tmp_14_reg_728, "tmp_14_reg_728");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, i_phi_fu_198_p4, "i_phi_fu_198_p4");
    sc_trace(mVcdFile, hist0_1_phi_fu_209_p4, "hist0_1_phi_fu_209_p4");
    sc_trace(mVcdFile, index5_phi_fu_219_p4, "index5_phi_fu_219_p4");
    sc_trace(mVcdFile, index1_1_phi_fu_229_p4, "index1_1_phi_fu_229_p4");
    sc_trace(mVcdFile, index0_3_phi_fu_239_p4, "index0_3_phi_fu_239_p4");
    sc_trace(mVcdFile, hist1_1_phi_fu_251_p4, "hist1_1_phi_fu_251_p4");
    sc_trace(mVcdFile, hist5_phi_fu_262_p4, "hist5_phi_fu_262_p4");
    sc_trace(mVcdFile, tmp_fu_290_p1, "tmp_fu_290_p1");
    sc_trace(mVcdFile, tmp_4_fu_295_p1, "tmp_4_fu_295_p1");
    sc_trace(mVcdFile, tmp_s_fu_322_p1, "tmp_s_fu_322_p1");
    sc_trace(mVcdFile, tmp_3_fu_393_p1, "tmp_3_fu_393_p1");
    sc_trace(mVcdFile, tmp_13_fu_405_p1, "tmp_13_fu_405_p1");
    sc_trace(mVcdFile, tmp_17_fu_532_p1, "tmp_17_fu_532_p1");
    sc_trace(mVcdFile, tmp_15_fu_526_p2, "tmp_15_fu_526_p2");
    sc_trace(mVcdFile, tmp_7_fu_543_p1, "tmp_7_fu_543_p1");
    sc_trace(mVcdFile, tmp_1_fu_537_p2, "tmp_1_fu_537_p2");
    sc_trace(mVcdFile, tmp_12_fu_554_p1, "tmp_12_fu_554_p1");
    sc_trace(mVcdFile, tmp_16_fu_565_p1, "tmp_16_fu_565_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, grp_fu_271_p0, "grp_fu_271_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_2_fu_300_p2, "tmp_2_fu_300_p2");
    sc_trace(mVcdFile, tmp_6_fu_327_p2, "tmp_6_fu_327_p2");
    sc_trace(mVcdFile, tmp_8_fu_333_p2, "tmp_8_fu_333_p2");
    sc_trace(mVcdFile, sel_tmp_fu_346_p2, "sel_tmp_fu_346_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_352_p2, "sel_tmp3_fu_352_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_358_p3, "sel_tmp4_fu_358_p3");
    sc_trace(mVcdFile, sel_tmp53_v_fu_372_p3, "sel_tmp53_v_fu_372_p3");
    sc_trace(mVcdFile, tmp_5_fu_410_p2, "tmp_5_fu_410_p2");
    sc_trace(mVcdFile, tmp_9_fu_416_p2, "tmp_9_fu_416_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_428_p2, "sel_tmp1_fu_428_p2");
    sc_trace(mVcdFile, sel_tmp6_demorgan_fu_440_p2, "sel_tmp6_demorgan_fu_440_p2");
    sc_trace(mVcdFile, tmp_11_fu_422_p2, "tmp_11_fu_422_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_446_p2, "sel_tmp6_fu_446_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_434_p2, "sel_tmp2_fu_434_p2");
    sc_trace(mVcdFile, or_cond_fu_458_p2, "or_cond_fu_458_p2");
    sc_trace(mVcdFile, newSel_fu_464_p3, "newSel_fu_464_p3");
    sc_trace(mVcdFile, sel_tmp5_fu_480_p3, "sel_tmp5_fu_480_p3");
    sc_trace(mVcdFile, sel_tmp8_fu_496_p3, "sel_tmp8_fu_496_p3");
    sc_trace(mVcdFile, index0_6_fu_512_p3, "index0_6_fu_512_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("kernel3.hdltvin.dat");
    mHdltvoutHandle.open("kernel3.hdltvout.dat");
}

kernel3::~kernel3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete kernel3_fadd_32nsbkb_U1;
}

void kernel3::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void kernel3::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
             !esl_seteq<1,1,1>(exitcond_reg_663.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond_reg_663.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                     !esl_seteq<1,1,1>(exitcond_reg_663.read(), ap_const_lv1_0)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        hist0_1_reg_205 = hist1_reg_638.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_reg_663.read()))) {
        hist0_1_reg_205 = hist1_1_reg_246.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        hist1_1_reg_246 = hist2_reg_658.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_reg_663.read()))) {
        hist1_1_reg_246 = grp_fu_271_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        hist5_reg_258 = hist0_reg_605.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_reg_663.read()))) {
        hist5_reg_258 = hist0_1_reg_205.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        i_reg_194 = ap_const_lv11_3;
    } else if ((esl_seteq<1,1,1>(exitcond_reg_663.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_reg_194 = i_1_reg_677.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        index0_3_reg_236 = index0_3_ph_reg_648.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_reg_663.read()))) {
        index0_3_reg_236 = index0_1_reg_698.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        index1_1_reg_226 = index1_1_ph_reg_643.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_reg_663.read()))) {
        index1_1_reg_226 = index1_2_reg_693.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        index5_reg_216 = reg_275.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_reg_663.read()))) {
        index5_reg_216 = ap_pipeline_reg_pp0_iter1_reg_285.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        ap_pipeline_reg_pp0_iter1_exitcond_reg_663 = exitcond_reg_663.read();
        exitcond_reg_663 = exitcond_fu_387_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        ap_pipeline_reg_pp0_iter1_reg_285 = reg_285.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        hist0_reg_605 = grp_fu_271_p2.read();
        hist4_v_reg_611 = hist4_v_fu_306_p3.read();
        index4_reg_616 = index4_fu_314_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        hist1_2_ph_v_reg_653 = hist1_2_ph_v_fu_379_p3.read();
        hist1_reg_638 = grp_fu_271_p2.read();
        index0_3_ph_reg_648 = index0_3_ph_fu_365_p3.read();
        index1_1_ph_reg_643 = index1_1_ph_fu_338_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        hist2_reg_658 = grp_fu_271_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        hist_load_reg_585 = hist_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_387_p2.read()))) {
        i_1_reg_677 = i_1_fu_399_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_reg_663.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        index0_1_reg_698 = index0_1_fu_488_p3.read();
        index1_2_reg_693 = index1_2_fu_472_p3.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())))) {
        reg_275 = index_q0.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_663.read(), ap_const_lv1_0)))) {
        reg_280 = weight_q0.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_663.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())))) {
        reg_285 = index_q0.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_reg_663.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        sel_tmp7_reg_687 = sel_tmp7_fu_452_p2.read();
        sel_tmp9_reg_703 = sel_tmp9_fu_504_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()))) {
        tmp_10_reg_724 = tmp_10_fu_548_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        tmp_14_reg_728 = tmp_14_fu_559_p2.read();
    }
}

void kernel3::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(16, 16);
}

void kernel3::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read().range(17, 17);
}

void kernel3::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read().range(18, 18);
}

void kernel3::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read().range(19, 19);
}

void kernel3::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void kernel3::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void kernel3::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read().range(10, 10);
}

void kernel3::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read().range(11, 11);
}

void kernel3::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read().range(14, 14);
}

void kernel3::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read().range(15, 15);
}

void kernel3::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void kernel3::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read().range(20, 20);
}

void kernel3::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read().range(21, 21);
}

void kernel3::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read().range(22, 22);
}

void kernel3::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void kernel3::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void kernel3::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void kernel3::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void kernel3::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void kernel3::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(7, 7);
}

void kernel3::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void kernel3::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void kernel3::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void kernel3::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void kernel3::thread_exitcond_fu_387_p2() {
    exitcond_fu_387_p2 = (!i_phi_fu_198_p4.read().is_01() || !ap_const_lv11_400.is_01())? sc_lv<1>(): sc_lv<1>(i_phi_fu_198_p4.read() == ap_const_lv11_400);
}

void kernel3::thread_grp_fu_271_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_271_p0 = hist2_2_pn_fu_519_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        grp_fu_271_p0 = hist1_2_ph_v_reg_653.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        grp_fu_271_p0 = hist4_v_reg_611.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        grp_fu_271_p0 = hist_load_reg_585.read();
    } else {
        grp_fu_271_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void kernel3::thread_hist0_1_phi_fu_209_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_reg_663.read()))) {
        hist0_1_phi_fu_209_p4 = hist1_1_reg_246.read();
    } else {
        hist0_1_phi_fu_209_p4 = hist0_1_reg_205.read();
    }
}

void kernel3::thread_hist1_1_phi_fu_251_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_reg_663.read()))) {
        hist1_1_phi_fu_251_p4 = grp_fu_271_p2.read();
    } else {
        hist1_1_phi_fu_251_p4 = hist1_1_reg_246.read();
    }
}

void kernel3::thread_hist1_2_ph_v_fu_379_p3() {
    hist1_2_ph_v_fu_379_p3 = (!tmp_6_fu_327_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_6_fu_327_p2.read()[0].to_bool())? grp_fu_271_p2.read(): sel_tmp53_v_fu_372_p3.read());
}

void kernel3::thread_hist2_2_pn_fu_519_p3() {
    hist2_2_pn_fu_519_p3 = (!sel_tmp7_reg_687.read()[0].is_01())? sc_lv<32>(): ((sel_tmp7_reg_687.read()[0].to_bool())? hist5_reg_258.read(): sel_tmp9_reg_703.read());
}

void kernel3::thread_hist4_v_fu_306_p3() {
    hist4_v_fu_306_p3 = (!tmp_2_fu_300_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_2_fu_300_p2.read()[0].to_bool())? grp_fu_271_p2.read(): hist_q0.read());
}

void kernel3::thread_hist5_phi_fu_262_p4() {
    hist5_phi_fu_262_p4 = hist5_reg_258.read();
}

void kernel3::thread_hist_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()))) {
        hist_address0 =  (sc_lv<10>) (tmp_16_fu_565_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        hist_address0 =  (sc_lv<10>) (tmp_12_fu_554_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()))) {
        hist_address0 =  (sc_lv<10>) (tmp_7_fu_543_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        hist_address0 =  (sc_lv<10>) (tmp_17_fu_532_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        hist_address0 =  (sc_lv<10>) (tmp_13_fu_405_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        hist_address0 =  (sc_lv<10>) (tmp_s_fu_322_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        hist_address0 =  (sc_lv<10>) (tmp_4_fu_295_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        hist_address0 =  (sc_lv<10>) (tmp_fu_290_p1.read());
    } else {
        hist_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void kernel3::thread_hist_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read())))) {
        hist_ce0 = ap_const_logic_1;
    } else {
        hist_ce0 = ap_const_logic_0;
    }
}

void kernel3::thread_hist_d0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()))) {
        hist_d0 = hist1_1_reg_246.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        hist_d0 = hist0_1_reg_205.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()))) {
        hist_d0 = hist5_reg_258.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        hist_d0 = hist5_phi_fu_262_p4.read();
    } else {
        hist_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void kernel3::thread_hist_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_reg_663.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_fu_526_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_537_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_724.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_728.read())))) {
        hist_we0 = ap_const_logic_1;
    } else {
        hist_we0 = ap_const_logic_0;
    }
}

void kernel3::thread_i_1_fu_399_p2() {
    i_1_fu_399_p2 = (!i_phi_fu_198_p4.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(i_phi_fu_198_p4.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void kernel3::thread_i_phi_fu_198_p4() {
    if ((esl_seteq<1,1,1>(exitcond_reg_663.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_phi_fu_198_p4 = i_1_reg_677.read();
    } else {
        i_phi_fu_198_p4 = i_reg_194.read();
    }
}

void kernel3::thread_index0_1_fu_488_p3() {
    index0_1_fu_488_p3 = (!sel_tmp7_fu_452_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp7_fu_452_p2.read()[0].to_bool())? index1_1_phi_fu_229_p4.read(): sel_tmp5_fu_480_p3.read());
}

void kernel3::thread_index0_3_ph_fu_365_p3() {
    index0_3_ph_fu_365_p3 = (!tmp_6_fu_327_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_6_fu_327_p2.read()[0].to_bool())? index4_reg_616.read(): sel_tmp4_fu_358_p3.read());
}

void kernel3::thread_index0_3_phi_fu_239_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_reg_663.read()))) {
        index0_3_phi_fu_239_p4 = index0_1_reg_698.read();
    } else {
        index0_3_phi_fu_239_p4 = index0_3_reg_236.read();
    }
}

void kernel3::thread_index0_6_fu_512_p3() {
    index0_6_fu_512_p3 = (!sel_tmp7_reg_687.read()[0].is_01())? sc_lv<32>(): ((sel_tmp7_reg_687.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: index0_3_reg_236.read());
}

void kernel3::thread_index1_1_ph_fu_338_p3() {
    index1_1_ph_fu_338_p3 = (!tmp_6_fu_327_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_6_fu_327_p2.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: reg_285.read());
}

void kernel3::thread_index1_1_phi_fu_229_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_reg_663.read()))) {
        index1_1_phi_fu_229_p4 = index1_2_reg_693.read();
    } else {
        index1_1_phi_fu_229_p4 = index1_1_reg_226.read();
    }
}

void kernel3::thread_index1_2_fu_472_p3() {
    index1_2_fu_472_p3 = (!or_cond_fu_458_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_458_p2.read()[0].to_bool())? index5_phi_fu_219_p4.read(): newSel_fu_464_p3.read());
}

void kernel3::thread_index4_fu_314_p3() {
    index4_fu_314_p3 = (!tmp_2_fu_300_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_2_fu_300_p2.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: reg_275.read());
}

void kernel3::thread_index5_phi_fu_219_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_reg_663.read()))) {
        index5_phi_fu_219_p4 = ap_pipeline_reg_pp0_iter1_reg_285.read();
    } else {
        index5_phi_fu_219_p4 = index5_reg_216.read();
    }
}

void kernel3::thread_index_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        index_address0 =  (sc_lv<10>) (tmp_3_fu_393_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        index_address0 =  (sc_lv<10>) (ap_const_lv64_2);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        index_address0 =  (sc_lv<10>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        index_address0 =  (sc_lv<10>) (ap_const_lv64_0);
    } else {
        index_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void kernel3::thread_index_ce0() {
    if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())))) {
        index_ce0 = ap_const_logic_1;
    } else {
        index_ce0 = ap_const_logic_0;
    }
}

void kernel3::thread_newSel_fu_464_p3() {
    newSel_fu_464_p3 = (!tmp_5_fu_410_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_5_fu_410_p2.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: index5_phi_fu_219_p4.read());
}

void kernel3::thread_or_cond_fu_458_p2() {
    or_cond_fu_458_p2 = (sel_tmp7_fu_452_p2.read() | sel_tmp2_fu_434_p2.read());
}

void kernel3::thread_sel_tmp1_fu_428_p2() {
    sel_tmp1_fu_428_p2 = (tmp_5_fu_410_p2.read() ^ ap_const_lv1_1);
}

void kernel3::thread_sel_tmp2_fu_434_p2() {
    sel_tmp2_fu_434_p2 = (tmp_9_fu_416_p2.read() & sel_tmp1_fu_428_p2.read());
}

void kernel3::thread_sel_tmp3_fu_352_p2() {
    sel_tmp3_fu_352_p2 = (tmp_8_fu_333_p2.read() & sel_tmp_fu_346_p2.read());
}

void kernel3::thread_sel_tmp4_fu_358_p3() {
    sel_tmp4_fu_358_p3 = (!sel_tmp3_fu_352_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp3_fu_352_p2.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: index4_reg_616.read());
}

void kernel3::thread_sel_tmp53_v_fu_372_p3() {
    sel_tmp53_v_fu_372_p3 = (!sel_tmp3_fu_352_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp3_fu_352_p2.read()[0].to_bool())? hist0_reg_605.read(): hist_q0.read());
}

void kernel3::thread_sel_tmp5_fu_480_p3() {
    sel_tmp5_fu_480_p3 = (!sel_tmp2_fu_434_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_434_p2.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: index1_1_phi_fu_229_p4.read());
}

void kernel3::thread_sel_tmp6_demorgan_fu_440_p2() {
    sel_tmp6_demorgan_fu_440_p2 = (tmp_5_fu_410_p2.read() | tmp_9_fu_416_p2.read());
}

void kernel3::thread_sel_tmp6_fu_446_p2() {
    sel_tmp6_fu_446_p2 = (sel_tmp6_demorgan_fu_440_p2.read() ^ ap_const_lv1_1);
}

void kernel3::thread_sel_tmp7_fu_452_p2() {
    sel_tmp7_fu_452_p2 = (tmp_11_fu_422_p2.read() & sel_tmp6_fu_446_p2.read());
}

void kernel3::thread_sel_tmp8_fu_496_p3() {
    sel_tmp8_fu_496_p3 = (!tmp_5_fu_410_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_5_fu_410_p2.read()[0].to_bool())? hist1_1_phi_fu_251_p4.read(): hist_q0.read());
}

void kernel3::thread_sel_tmp9_fu_504_p3() {
    sel_tmp9_fu_504_p3 = (!sel_tmp2_fu_434_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_434_p2.read()[0].to_bool())? hist0_1_phi_fu_209_p4.read(): sel_tmp8_fu_496_p3.read());
}

void kernel3::thread_sel_tmp_fu_346_p2() {
    sel_tmp_fu_346_p2 = (tmp_6_fu_327_p2.read() ^ ap_const_lv1_1);
}

void kernel3::thread_tmp_10_fu_548_p2() {
    tmp_10_fu_548_p2 = (!index1_1_reg_226.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<1>(): sc_lv<1>(index1_1_reg_226.read() == ap_const_lv32_FFFFFFFF);
}

void kernel3::thread_tmp_11_fu_422_p2() {
    tmp_11_fu_422_p2 = (!reg_285.read().is_01() || !index0_3_phi_fu_239_p4.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_285.read() == index0_3_phi_fu_239_p4.read());
}

void kernel3::thread_tmp_12_fu_554_p1() {
    tmp_12_fu_554_p1 = esl_sext<64,32>(index1_1_reg_226.read());
}

void kernel3::thread_tmp_13_fu_405_p1() {
    tmp_13_fu_405_p1 = esl_sext<64,32>(index_q0.read());
}

void kernel3::thread_tmp_14_fu_559_p2() {
    tmp_14_fu_559_p2 = (!index5_reg_216.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<1>(): sc_lv<1>(index5_reg_216.read() == ap_const_lv32_FFFFFFFF);
}

void kernel3::thread_tmp_15_fu_526_p2() {
    tmp_15_fu_526_p2 = (!index0_6_fu_512_p3.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<1>(): sc_lv<1>(index0_6_fu_512_p3.read() == ap_const_lv32_FFFFFFFF);
}

void kernel3::thread_tmp_16_fu_565_p1() {
    tmp_16_fu_565_p1 = esl_sext<64,32>(index5_reg_216.read());
}

void kernel3::thread_tmp_17_fu_532_p1() {
    tmp_17_fu_532_p1 = esl_sext<64,32>(index0_6_fu_512_p3.read());
}

void kernel3::thread_tmp_1_fu_537_p2() {
    tmp_1_fu_537_p2 = (!index0_3_reg_236.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<1>(): sc_lv<1>(index0_3_reg_236.read() == ap_const_lv32_FFFFFFFF);
}

void kernel3::thread_tmp_2_fu_300_p2() {
    tmp_2_fu_300_p2 = (!reg_285.read().is_01() || !reg_275.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_285.read() == reg_275.read());
}

void kernel3::thread_tmp_3_fu_393_p1() {
    tmp_3_fu_393_p1 = esl_zext<64,11>(i_phi_fu_198_p4.read());
}

void kernel3::thread_tmp_4_fu_295_p1() {
    tmp_4_fu_295_p1 = esl_sext<64,32>(index_q0.read());
}

void kernel3::thread_tmp_5_fu_410_p2() {
    tmp_5_fu_410_p2 = (!reg_285.read().is_01() || !index5_phi_fu_219_p4.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_285.read() == index5_phi_fu_219_p4.read());
}

void kernel3::thread_tmp_6_fu_327_p2() {
    tmp_6_fu_327_p2 = (!reg_275.read().is_01() || !reg_285.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_275.read() == reg_285.read());
}

void kernel3::thread_tmp_7_fu_543_p1() {
    tmp_7_fu_543_p1 = esl_sext<64,32>(index0_3_reg_236.read());
}

void kernel3::thread_tmp_8_fu_333_p2() {
    tmp_8_fu_333_p2 = (!reg_275.read().is_01() || !index4_reg_616.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_275.read() == index4_reg_616.read());
}

void kernel3::thread_tmp_9_fu_416_p2() {
    tmp_9_fu_416_p2 = (!reg_285.read().is_01() || !index1_1_phi_fu_229_p4.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_285.read() == index1_1_phi_fu_229_p4.read());
}

void kernel3::thread_tmp_fu_290_p1() {
    tmp_fu_290_p1 = esl_sext<64,32>(index_q0.read());
}

void kernel3::thread_tmp_s_fu_322_p1() {
    tmp_s_fu_322_p1 = esl_sext<64,32>(index_q0.read());
}

void kernel3::thread_weight_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        weight_address0 =  (sc_lv<10>) (tmp_3_fu_393_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        weight_address0 =  (sc_lv<10>) (ap_const_lv64_2);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        weight_address0 =  (sc_lv<10>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        weight_address0 =  (sc_lv<10>) (ap_const_lv64_0);
    } else {
        weight_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void kernel3::thread_weight_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())))) {
        weight_ce0 = ap_const_logic_1;
    } else {
        weight_ce0 = ap_const_logic_0;
    }
}

void kernel3::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            break;
        case 524288 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(exitcond_reg_663.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void kernel3::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"hist_address0\" :  \"" << hist_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"hist_ce0\" :  \"" << hist_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"hist_we0\" :  \"" << hist_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"hist_d0\" :  \"" << hist_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"hist_q0\" :  \"" << hist_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"weight_address0\" :  \"" << weight_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"weight_ce0\" :  \"" << weight_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"weight_q0\" :  \"" << weight_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"index_address0\" :  \"" << index_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"index_ce0\" :  \"" << index_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"index_q0\" :  \"" << index_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

